{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Udemydatafactorypractice"
		},
		"AzureDataLakeStoragemultifiles_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStoragemultifiles'"
		},
		"destinationlinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'destinationlinkedservice'"
		},
		"linkedserveiceforlightdb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedserveiceforlightdb'"
		},
		"linkedserviceSQLdatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedserviceSQLdatabase'"
		},
		"linkedservicedatalakestorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedservicedatalakestorage'"
		},
		"AzureDataLakeStoragemultifiles_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://udemypracticedatalake.dfs.core.windows.net"
		},
		"RestAPI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://dummy.restapiexample.com/api/v1/employees"
		},
		"destinationlinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://udemypracticedatalake.dfs.core.windows.net"
		},
		"linkedservicedatalakestorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://udemypracticedatalake.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Master_pipeline_batchlevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ISNULL(max(BHID),0) +1 BHID from Batch_Header",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "lightdbbatchid",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "master_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Batchid": {
									"value": "@activity('Lookup1').output.firstrow.BHID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-11T03:59:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/lightdbbatchid')]",
				"[concat(variables('factoryId'), '/pipelines/master_pipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Restapi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Restapidataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "restapijson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-08-11T06:08:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Restapidataset')]",
				"[concat(variables('factoryId'), '/datasets/restapijson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/childpipelinetovalidatestructure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1_copy1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "individualfile",
								"type": "DatasetReference",
								"parameters": {
									"filecoulmncount": {
										"value": "@pipeline().parameters.filenamechildpipeline",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "fileformatlookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select columnnames from Fileformat order by columnnames",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "fileformatdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1_copy1').output.structure",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "filestructure",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "fileformatlookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('fileformatlookup').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Append variable2",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "tablestructure",
										"value": {
											"value": "@item().columnnames",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variablefile",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "stringfilestructure",
							"value": {
								"value": "@join(variables('filestructure'),'|')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variabletable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "stringtablestructure",
							"value": {
								"value": "@join(variables('tablestructure'),'|')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variablefile",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set variabletable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('stringfilestructure'),variables('stringtablestructure'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data for tobe processed folder",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@pipeline().parameters.filenamechildpipeline",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "tobeprocessedsourcefolder",
											"type": "DatasetReference",
											"parameters": {
												"tobeprocessedfile": {
													"value": "@pipeline().parameters.filenamechildpipeline",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "tobeprocesseddestination",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Stored procedureforvalidfiles",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy data for tobe processed folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[filevalidationtrackingsp]",
										"storedProcedureParameters": {
											"BHID": {
												"value": {
													"value": "@pipeline().parameters.BHID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"filename": {
												"value": {
													"value": "@pipeline().parameters.filenamechildpipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"reason": {
												"value": "TO BE PROCESSED",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "linkedserveiceforlightdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filenamechildpipeline": {
						"type": "string"
					},
					"BHID": {
						"type": "string"
					}
				},
				"variables": {
					"filestructure": {
						"type": "Array"
					},
					"tablestructure": {
						"type": "Array"
					},
					"stringfilestructure": {
						"type": "String"
					},
					"stringtablestructure": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-05T17:08:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/individualfile')]",
				"[concat(variables('factoryId'), '/datasets/fileformatdataset')]",
				"[concat(variables('factoryId'), '/datasets/tobeprocessedsourcefolder')]",
				"[concat(variables('factoryId'), '/datasets/tobeprocesseddestination')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copydataactivitypipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data -scenario 2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "movie",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "genres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "genres",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rating",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "datalakeflatfile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-25T10:47:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalakeflatfile')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowdemoudemy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sqldatasink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-26T10:39:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_data_pull')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookupoldactivitydate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "oldmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookupnewactivitydate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(Modified_date) as NewWatermarkvalue from Source_tbl",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "newmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "incrementalcopyactivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookupoldactivitydate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookupnewactivitydate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from Source_tbl where Modified_date > '@{activity('Lookupoldactivitydate').output.firstRow.Last_Max_date}' and Modified_date <= '@{activity('Lookupnewactivitydate').output.firstRow.NewWatermarkvalue}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "newmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destinationfiledataset",
								"type": "DatasetReference",
								"parameters": {
									"datasetfilenamedestination": {
										"value": "@concat(pipeline().parameters.filenamedestination,'_',pipeline().RunId,'.txt')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Stored procedureactivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "incrementalcopyactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('Lookupnewactivitydate').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('Lookupoldactivitydate').output.firstRow.Table_Name}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linkedserveiceforlightdb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"filenamedestination": {
						"type": "string",
						"defaultValue": "Source_tbl"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-30T07:28:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/oldmodifieddatedataset')]",
				"[concat(variables('factoryId'), '/datasets/newmodifieddatedataset')]",
				"[concat(variables('factoryId'), '/datasets/destinationfiledataset')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_data_pull_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookupoldactivitydate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "oldmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookupnewactivitydate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(Modified_date) as NewWatermarkvalue from Source_tbl",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "newmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookupoldactivitydate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookupnewactivitydate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookupnewactivitydate').output.firstRow.NewWatermarkvalue,activity('Lookupoldactivitydate').output.firstRow.Last_Max_date)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "incrementalcopyactivity",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from Source_tbl  ",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "newmodifieddatedataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "destinationfiledataset",
											"type": "DatasetReference",
											"parameters": {
												"datasetfilenamedestination": {
													"value": "@concat(pipeline().parameters.filenamedestination,'_',pipeline().RunId,'.txt')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Stored procedureactivity",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "incrementalcopyactivity",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_write_watermark]",
										"storedProcedureParameters": {
											"LastModifiedtime": {
												"value": {
													"value": "@{activity('Lookupnewactivitydate').output.firstRow.NewWatermarkvalue}",
													"type": "Expression"
												},
												"type": "Datetime"
											},
											"TableName": {
												"value": {
													"value": "@{activity('Lookupoldactivitydate').output.firstRow.Table_Name}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "linkedserveiceforlightdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"filenamedestination": {
						"type": "string",
						"defaultValue": "Source_tbl"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-29T09:20:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/oldmodifieddatedataset')]",
				"[concat(variables('factoryId'), '/datasets/newmodifieddatedataset')]",
				"[concat(variables('factoryId'), '/datasets/destinationfiledataset')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_data_pull_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookupoldactivitydate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "oldmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Lookupnewactivitydate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(Modified_date) as NewWatermarkvalue from Source_tbl",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "newmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "incrementalcopyactivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookupoldactivitydate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Lookupnewactivitydate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from Source_tbl where Modified_date > '@{activity('Lookupoldactivitydate').output.firstRow.Last_Max_date}' and Modified_date <= '@{activity('Lookupnewactivitydate').output.firstRow.NewWatermarkvalue}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "newmodifieddatedataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destinationfiledataset",
								"type": "DatasetReference",
								"parameters": {
									"datasetfilenamedestination": {
										"value": "@concat(pipeline().parameters.filenamedestination,'_',pipeline().RunId,'.txt')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Stored procedureactivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "incrementalcopyactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_write_watermark]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('Lookupnewactivitydate').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('Lookupoldactivitydate').output.firstRow.Table_Name}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linkedserveiceforlightdb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"filenamedestination": {
						"type": "string",
						"defaultValue": "Source_tbl"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-30T07:19:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/oldmodifieddatedataset')]",
				"[concat(variables('factoryId'), '/datasets/newmodifieddatedataset')]",
				"[concat(variables('factoryId'), '/datasets/destinationfiledataset')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/master_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metadata_assignment2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "assignment2sourcefolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "metadata_assignment2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('metadata_assignment2').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[filevalidation]",
											"storedProcedureParameters": {
												"filename": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "assignment2datasetforcondition",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('Lookup1').output.value[0].condition,1)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy data1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "@item().name",
																"type": "Expression"
															},
															"wildcardFileName": "*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "assignment2sourcefolder",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "rejectedfolderassignment2",
														"type": "DatasetReference",
														"parameters": {
															"rejectedfolder": "@item().name"
														}
													}
												]
											},
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Copy data1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[filevalidationtrackingsp]",
													"storedProcedureParameters": {
														"BHID": {
															"value": {
																"value": "@pipeline().parameters.Batchid",
																"type": "Expression"
															},
															"type": "Int64"
														},
														"filename": {
															"value": {
																"value": "@item().name",
																"type": "Expression"
															},
															"type": "String"
														},
														"reason": {
															"value": {
																"value": "@activity('Lookup1').output.value[0].reson",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "linkedserveiceforlightdb",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Execute Pipeline1",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "childpipelinetovalidatestructure",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"filenamechildpipeline": {
															"value": "@item().name",
															"type": "Expression"
														},
														"BHID": {
															"value": "@pipeline().parameters.Batchid",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Execute sendgridmail",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "sendgrid",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataFactoryName": {
												"value": "@pipeline().DataFactory",
												"type": "Expression"
											},
											"PipelineName": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"BHIDfailed": {
												"value": "@pipeline().parameters.Batchid",
												"type": "Expression"
											},
											"pipelinefailed": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Batchidinsert]",
								"storedProcedureParameters": {
									"bhid": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.Batchid",
											"type": "Expression"
										}
									},
									"pipelinename": {
										"type": "String",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "insertingbatchid",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"Batchid": {
						"type": "int",
						"defaultValue": 0
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-11T07:03:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/assignment2sourcefolder')]",
				"[concat(variables('factoryId'), '/datasets/insertingbatchid')]",
				"[concat(variables('factoryId'), '/datasets/assignment2datasetforcondition')]",
				"[concat(variables('factoryId'), '/pipelines/sendgrid')]",
				"[concat(variables('factoryId'), '/datasets/rejectedfolderassignment2')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]",
				"[concat(variables('factoryId'), '/pipelines/childpipelinetovalidatestructure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sendgrid')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"description": "rest api web activity",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-51.eastus.logic.azure.com:443/workflows/25692d91d4224d538d846123271f83ca/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=D3xIDsbfM9BsbGGiFJUIsBD_cEbioVCEqVqgZZ7d4Ic",
							"method": "POST",
							"headers": {
								"content-type": "application/json"
							},
							"body": {
								"value": "{\n    \"DataFactoryName\":\n        \"@pipeline().parameters.DataFactoryName\",\n    \"PipelineName\":\n        \"@pipeline().parameters.PipelineName\",\n    \"ErrorMessage\":\n        \"@pipeline().parameters.ErrorMessage\",\n    \"EmailTo\":\n        \"Nagamohana.Rajulapati@kantar.com\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Restapidataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "restapijson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[failedpipelines]",
							"storedProcedureParameters": {
								"bhid": {
									"value": {
										"value": "@pipeline().parameters.BHIDfailed",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"erromessage": {
									"value": {
										"value": "@pipeline().parameters.ErrorMessage",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().parameters.pipelinefailed",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "linkedserveiceforlightdb",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"DataFactoryName": {
						"type": "string"
					},
					"PipelineName": {
						"type": "string"
					},
					"ErrorMessage": {
						"type": "string"
					},
					"BHIDfailed": {
						"type": "int"
					},
					"pipelinefailed": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-11T07:14:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Restapidataset')]",
				"[concat(variables('factoryId'), '/datasets/restapijson')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/udemypractice')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Multiplefilesdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'m')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('Filter1').output)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Append variable2",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "newvariable",
										"value": "'falseselection'"
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Multiplefilesdataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "multiplefilesdestination",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "none"
					}
				},
				"variables": {
					"newvariable": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-30T06:39:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Multiplefilesdataset')]",
				"[concat(variables('factoryId'), '/datasets/multiplefilesdestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/udemypractice_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Multiplefilesdataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'m')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(activity('Filter1').output)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Append variable2",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "newvariable",
										"value": "'falseselection'"
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "none"
					}
				},
				"variables": {
					"newvariable": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-27T11:14:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Multiplefilesdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserviceSQLdatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "movie",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "genres",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "varchar"
					},
					{
						"name": "Rating",
						"type": "varchar"
					},
					{
						"name": "Rotton Tomato",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DEMO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserviceSQLdatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Multiplefilesdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragemultifiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "newblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragemultifiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestAPI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Restapidataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestAPI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/assignment2datasetforcondition')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/assignment2sourcefolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragemultifiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "assignment2source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragemultifiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragemultifiles",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales-data-part1.csv",
						"fileSystem": "newblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InvoiceNo",
						"type": "String"
					},
					{
						"name": "StockCode",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "InvoiceDate",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragemultifiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalakeflatfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedservicedatalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "moviesDB.csv",
						"fileSystem": "newblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedservicedatalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinationfiledataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationlinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"datasetfilenamedestination": {
						"type": "string",
						"defaultValue": "none"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().datasetfilenamedestination",
							"type": "Expression"
						},
						"fileSystem": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destinationlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fileformatdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Filenamingconvention",
						"type": "varchar"
					},
					{
						"name": "Columnnames",
						"type": "varchar"
					},
					{
						"name": "columncount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Created_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Fileformat"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/individualfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragemultifiles",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filecoulmncount": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filecoulmncount",
							"type": "Expression"
						},
						"fileSystem": "assignment2source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragemultifiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/insertingbatchid')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Batch_Header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lightdbbatchid')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BHID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Start_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "End_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Batch_Header"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/multiplefilesdestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationlinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destinationlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/newmodifieddatedataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tablename",
						"type": "varchar"
					},
					{
						"name": "Modified_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "createddate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Source_tbl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/oldmodifieddatedataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Table_Name",
						"type": "varchar"
					},
					{
						"name": "Last_Max_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Pull_master"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rejectedfolderassignment2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragemultifiles",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"rejectedfolder": {
						"type": "string",
						"defaultValue": "none"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().rejectedfolder",
							"type": "Expression"
						},
						"fileSystem": "assignment2rejectedfolder"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoragemultifiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/restapijson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationlinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "assignment2destination"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destinationlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tobeprocesseddestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationlinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "assignment2destination"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destinationlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tobeprocessedsourcefolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destinationlinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tobeprocessedfile": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().tobeprocessedfile",
							"type": "Expression"
						},
						"fileSystem": "assignment2source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destinationlinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/udemyassignmentdestination2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserveiceforlightdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "salesdata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserveiceforlightdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/udemyassignmentsource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedserviceSQLdatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedserviceSQLdatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoragemultifiles')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStoragemultifiles_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStoragemultifiles_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAPI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestAPI_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destinationlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('destinationlinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('destinationlinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedserveiceforlightdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedserveiceforlightdb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedserviceSQLdatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('linkedserviceSQLdatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedservicedatalakestorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedservicedatalakestorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedservicedatalakestorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/localintegrationruntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "to get the local files",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dataflowdataset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "udemyassignmentdestination2",
								"type": "DatasetReference"
							},
							"name": "sqldatasink1"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tInvoiceNo as string,\n\t\tStockCode as string,\n\t\tDescription as string,\n\t\tQuantity as string,\n\t\tInvoiceDate as string,\n\t\tUnitPrice as string,\n\t\tCustomerID as string,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sqldatasink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataflowdataset')]",
				"[concat(variables('factoryId'), '/datasets/udemyassignmentdestination2')]"
			]
		}
	]
}