{
	"name": "master_pipeline",
	"properties": {
		"activities": [
			{
				"name": "metadata_assignment2",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Lookup2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "assignment2sourcefolder",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "metadata_assignment2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('metadata_assignment2').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Lookup1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[filevalidation]",
									"storedProcedureParameters": {
										"filename": {
											"type": "String",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "assignment2datasetforcondition",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Lookup1').output.value[0].condition,1)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"wildcardFolderPath": {
														"value": "@item().name",
														"type": "Expression"
													},
													"wildcardFileName": "*",
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "assignment2sourcefolder",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "rejectedfolderassignment2",
												"type": "DatasetReference",
												"parameters": {
													"rejectedfolder": "@item().name"
												}
											}
										]
									},
									{
										"name": "Stored procedure1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[filevalidationtrackingsp]",
											"storedProcedureParameters": {
												"BHID": {
													"value": {
														"value": "@pipeline().parameters.Batchid",
														"type": "Expression"
													},
													"type": "Int64"
												},
												"filename": {
													"value": {
														"value": "@item().name",
														"type": "Expression"
													},
													"type": "String"
												},
												"reason": {
													"value": {
														"value": "@activity('Lookup1').output.value[0].reson",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "linkedserveiceforlightdb",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Execute Pipeline1",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "childpipelinetovalidatestructure",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"filenamechildpipeline": {
													"value": "@item().name",
													"type": "Expression"
												},
												"BHID": {
													"value": "@pipeline().parameters.Batchid",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Execute sendgridmail",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "If Condition1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "sendgrid",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Datafactoryname": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"pipelinename": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Errormessage": {
										"value": "@activity('Lookup1').output.value[0].reson",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup2",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[Batchidinsert]",
						"storedProcedureParameters": {
							"bhid": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.Batchid",
									"type": "Expression"
								}
							},
							"pipelinename": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "insertingbatchid",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"Batchid": {
				"type": "int",
				"defaultValue": 0
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-08-11T07:03:10Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}