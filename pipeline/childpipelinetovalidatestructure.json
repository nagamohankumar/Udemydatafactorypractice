{
	"name": "childpipelinetovalidatestructure",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1_copy1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "individualfile",
						"type": "DatasetReference",
						"parameters": {
							"filecoulmncount": {
								"value": "@pipeline().parameters.filenamechildpipeline",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"structure"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "fileformatlookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select columnnames from Fileformat order by columnnames",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "fileformatdataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1_copy1').output.structure",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append variable1",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "filestructure",
								"value": {
									"value": "@item().name",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "fileformatlookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('fileformatlookup').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Append variable2",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "tablestructure",
								"value": {
									"value": "@item().columnnames",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Set variablefile",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "stringfilestructure",
					"value": {
						"value": "@join(variables('filestructure'),'|')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variabletable",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "stringtablestructure",
					"value": {
						"value": "@join(variables('tablestructure'),'|')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set variablefile",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variabletable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('stringfilestructure'),variables('stringtablestructure'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy data for tobe processed folder",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@pipeline().parameters.filenamechildpipeline",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "tobeprocessedsourcefolder",
									"type": "DatasetReference",
									"parameters": {
										"tobeprocessedfile": {
											"value": "@pipeline().parameters.filenamechildpipeline",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "tobeprocesseddestination",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Stored procedureforvalidfiles",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data for tobe processed folder",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[filevalidationtrackingsp]",
								"storedProcedureParameters": {
									"BHID": {
										"value": {
											"value": "@pipeline().parameters.BHID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"filename": {
										"value": {
											"value": "@pipeline().parameters.filenamechildpipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"reason": {
										"value": "TO BE PROCESSED",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "linkedserveiceforlightdb",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"filenamechildpipeline": {
				"type": "string"
			},
			"BHID": {
				"type": "string"
			}
		},
		"variables": {
			"filestructure": {
				"type": "Array"
			},
			"tablestructure": {
				"type": "Array"
			},
			"stringfilestructure": {
				"type": "String"
			},
			"stringtablestructure": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-08-05T17:08:41Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}